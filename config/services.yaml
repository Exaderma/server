# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Entity\PatientTableEntity:
        public: true
        class: App\Entity\PatientTableEntity
        arguments: []

    App\Entity\ProfessionalTableEntity:
        public: true
        class: App\Entity\ProfessionalTableEntity
        arguments: []

    App\Repository\PatientTableRepository:
        public: true
        class: App\Repository\PatientTableRepository
        arguments: []

    App\Repository\ProfessionalTableRepository:
        public: true
        class: App\Repository\ProfessionalTableRepository
        arguments: []

    App\Controller\PatientAuthentification\Register:
        public: true
        class: App\Controller\PatientAuthentification\Register\Register
        arguments:
            $doctrine: '@doctrine'
            $database: '@App\Entity\PatientTableEntity'
            $hashPassword: '@Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'

    App\Controller\PatientAuthentification\Login:
        public: true
        class: App\Controller\PatientAuthentification\Login\Login
        arguments:
            $doctrine: '@doctrine'
            $database: '@App\Entity\PatientTableEntity'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'

    App\Controller\ProfessionalAuthentification\Register:
        public: true
        class: App\Controller\ProfessionalAuthentification\Register\Register
        arguments:
            $doctrine: '@doctrine'
            $database: '@App\Entity\ProfessionalTableEntity'
            $hashPassword: '@Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'

    App\Controller\ProfessionalAuthentification\Login:
        public: true
        class: App\Controller\ProfessionalAuthentification\Login\Login
        arguments:
            $doctrine: '@doctrine'
            $database: '@App\Entity\ProfessionalTableEntity'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
    
    App\Controller\link\Link:
        public: true
        class: App\Controller\link\Link\LinkUser
        arguments:
            $uuid: '@App\Utils\UuidGenerator'
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
            $tokenStorageInterface: '@security.token_storage'
